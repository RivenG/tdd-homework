FROM php:7.1-apache

ENV COMPOSER_ALLOW_SUPERUSER 1
ENV APACHE_RUN_USER www-data
ENV APACHE_RUN_GROUP www-data
ENV APACHE_PID_FILE /var/run/apache2.pid
ENV APACHE_RUN_DIR /var/run/apache2
ENV APACHE_LOCK_DIR /var/lock/apache2
ENV APACHE_SERVER_NAME localhost
ENV APACHE_SERVER_ALIAS localhost
ENV APACHE_DOCUMENT_ROOT /var/www/root
ENV APACHE_LOG_DIR /var/log/apache2
ENV APACHE_USE_STANDARD_PORT 1
ENV DEBIAN_FRONTEND noninteractive
ENV XDEBUG_REMOTE_HOST "10.0.75.1"

# Installing packages
RUN apt-get update && \
    apt-get -y upgrade && \
    apt-get install --no-install-recommends -y \
        mc \
        git \
        subversion \
        curl \
        vim \
        nano \
        net-tools \
        zip \
        p7zip-full \
        libmemcached-dev \
        libbz2-dev \
        libicu-dev \
        libxml2-dev \
        libpq-dev \
        libssl-dev \
        libmcrypt-dev \
        libldb-dev \
        libfreetype6-dev \
        libjpeg62-turbo-dev \
        mysql-client && \
    apt-get clean && \
    apt-get -y autoremove && \
    rm -rf /var/lib/apt/lists/*

# LDAP install
RUN apt-get update && \
    apt-get -y upgrade && \
    apt-get install --no-install-recommends -y libldap2-dev && \
    ln -s /usr/lib/x86_64-linux-gnu/libldap.so /usr/lib/libldap.so && \
    ln -s /usr/lib/x86_64-linux-gnu/liblber.so /usr/lib/liblber.so && \
    docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu/ && \
    docker-php-ext-install ldap && \
    apt-get clean && \
    apt-get -y autoremove && \
    rm -rf /var/lib/apt/lists/*
    
# Memcached install
RUN curl -L -o /tmp/memcached.tar.gz "https://github.com/php-memcached-dev/php-memcached/archive/v3.0.4.tar.gz" && \
    mkdir -p /usr/src/php/ext/memcached && \
    tar -C /usr/src/php/ext/memcached -zxvf /tmp/memcached.tar.gz --strip 1 && \
    docker-php-ext-configure memcached && \
    docker-php-ext-install memcached && \
    rm /tmp/memcached.tar.gz

# Copy configuration files
COPY php_71/php.ini /usr/local/etc/php/

# Create directory for volume
RUN mkdir /data

# PHP extensions
RUN docker-php-ext-install bz2 && \
    docker-php-ext-configure pdo_mysql --with-pdo-mysql=mysqlnd && \
    docker-php-ext-install pdo_mysql && \
    docker-php-ext-install pdo_pgsql && \
    docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/lib && \
    docker-php-ext-install gd && \
    docker-php-ext-install soap && \
    docker-php-ext-configure intl && \
    docker-php-ext-install intl && \
    docker-php-ext-install mcrypt && \
    docker-php-ext-install bcmath && \
    docker-php-ext-install gettext && \
    docker-php-ext-install zip && \
    docker-php-ext-install opcache

# Install Xdebug
RUN mkdir -p /usr/src/php/ext/ && \
    curl -L http://pecl.php.net/get/xdebug-2.5.5.tgz >> /usr/src/php/ext/xdebug.tgz && \
    tar -xf /usr/src/php/ext/xdebug.tgz -C /usr/src/php/ext/ && \
    rm /usr/src/php/ext/xdebug.tgz && \
    docker-php-ext-install xdebug-2.5.5 && \
    docker-php-ext-install pcntl

RUN sed -ri -e 's!/var/www/html!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/sites-available/*.conf
RUN sed -ri -e 's!/var/www/!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/apache2.conf /etc/apache2/conf-available/*.conf

# Composer install
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin/ --filename=composer && \
    chmod +x /usr/bin/composer

# Clean up, try to reduce image size (much as you can on Debian..)
RUN apt-get autoremove -y && \
    apt-get clean all && \
    rm -rf /var/lib/apt/lists/* && \
    rm -rf /usr/share/doc /usr/share/man /usr/share/locale && \
    rm -rf /usr/src/php

WORKDIR /data
EXPOSE 9000

# Configuring apache
RUN a2enmod rewrite